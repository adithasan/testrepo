digraph L {
    fontsize = 18
    fontname = Arial
    labelloc = "t"
    labeljust = "l"
    rankdir="LR"
    label = <<b>Project Network Diagram</b> - tasks with no dependecies are shown in red<br/><br/>>

    /* ---------- Independent tasks ---------- */
    node [shape=record fontname=Arial fontsize=12 style=filled fillcolor="#FFCCCC"]
    14 [label="Define quantitative radius of allowed notes"]
    15 [label="Define query to retrieve notes based on given location"]
    16 [label="Define a server endpoint for get-notes requests"]
    17 [label="Convert array populated with applicable notes to JSON object"]
    18 [label="Create a layout interface for showing a note"]
    19 [label="Define a distance where the full note is viewed"]
    20 [label="Create a layout interface for notes with content blurred at certain distance"]
    21 [label="Define a radius that groups notes that are within that radius of each other"]
    22 [label="Add check to verify that GPS permissions are provided"]
    
    23 [label="Button on note will lead to layout for reporting a note on click"]
    24 [label="Define Retrofit interface for report-note client endpoint"]
    25 [label="Define a server endpoint for report-note requests"]
    26 [label="Create a table named ReportedNotes with noteID and optionalReport"]
    27 [label="Add human readable messages to string resources to display to user"]
        

    /* ---------- Dependent tasks ---------- */
    node [fillcolor="#FFFFFF"]
    14.0 [label="Compare distance between user & notes with allowed radius distance"]
    14.1 [label="Server returns JSON object will all applicable notes to client"]
    14.2 [label="Client should receive and package response for GET request"]
    14.3 [label="Apply grouped or non-grouped view"]
    14.4 [label="Render the notes based on location in AR"]
    14.5 [label="Client should determine distance between all displayed notes and user"]
    14.6 [label="Determine distance between notes"]
    14.7 [label="Clicking on the grouped notes will 'activate' the notes"]
    14.8 [label="Based on distance, the notes should alternate between full and blurred views"]
    14.9 [label="Compare computed distance between notes and the defined radius"]
    14.10 [label="Swiping on 'active' grouped notes will go through the stack of notes"]
    14 -> 14.0;
    14.0 -> 14.1;
    14.1 -> 14.2;
    14.2 -> 14.4, 14.5, 14.6;
    14.4 -> 14.7, 23; 14.5 -> 14.8; 14.6 -> 14.9;
    14.7 -> 14.10; 14.9 -> 14.3;
    14.3 -> 14.4;

    15.0 [label="Compute distance between user's location and location of notes"]
    15 -> 15.0;
    15.0 -> 14.0;

    16.0 [label="Client sends a GET request for notes with location of user"]
    16 -> 16.0, 14.2, 14.1;
    16.0 -> 14.1, 14.2;

    17 -> 14.1
    
    18.0 [label="Create an 'unactive' view of grouped notes in a layered view"]
    18.1 [label="Create an 'active' view of grouped notes"]
    18 -> 14.4, 18.0, 18.1;
    18.0 -> 14.3, 14.7;
    18.1 -> 14.7;

    19 -> 14.8

    20 -> 14.8

    21 -> 14.9

    22.0 [label="Add ability to ask user to provide GPS permissions"]
    22.1 [label="Implement error message if GPS permissions not provided"]
    22 -> 22.0, 22.1;

    23 [label="Button on note will lead to layout for reporting a note on click"]
    23.0 [label="Add text asking if the user is sure about reporting"]
    23.1 [label="Add a textbox for optional comments attached to reports"]
    23.2 [label="Add 'Report' button to submit the report with it's optional comment"]
    23.4 [label="Implement logic for selecting message upon request success/failure"]
    23 -> 23.0, 23.1, 23.2; 23.2 -> 24.0; 24.0 -> 23.4; 23.4 -> 27.0;

    24.0 [label="Client sends a post request to server with noteID and optionalReport"]
    24 -> 24.0;

    25 -> 24.0;


    26.0 [label="Define query to add reports to table with provided variables"]
    26 -> 26.0;

    27.0 [label="Create layout to display the result to user"]
    27 -> 27.0;

}